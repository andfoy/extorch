/// Check if all elements in a tensor (or dimension) are true.
fn all(
    input: &SharedPtr<CrossTensor>,
    dim: OptionalInt,
    keepdim: bool,
    out: TensorOut,
) -> Result<SharedPtr<CrossTensor>>;

/// Check if any element in a tensor (or dimension) is true.
fn any(
    input: &SharedPtr<CrossTensor>,
    dim: OptionalInt,
    keepdim: bool,
    out: TensorOut,
) -> Result<SharedPtr<CrossTensor>>;

/// Find the index of the maximum value of a tensor (or dimension).
fn argmax(
    input: &SharedPtr<CrossTensor>,
    dim: OptionalInt,
    keepdim: bool,
) -> Result<SharedPtr<CrossTensor>>;

/// Find the index of the minimum value of a tensor (or dimension).
fn argmin(
    input: &SharedPtr<CrossTensor>,
    dim: OptionalInt,
    keepdim: bool,
) -> Result<SharedPtr<CrossTensor>>;

/// Find the maximum value of a tensor (or in dimension).
fn max(
    input: &SharedPtr<CrossTensor>,
    dim: OptionalInt,
    keepdim: bool,
    out: TensorTuple,
) -> Result<TensorTuple>;

/// Find the maximum value of a tensor (or in dimension).
fn min(
    input: &SharedPtr<CrossTensor>,
    dim: OptionalInt,
    keepdim: bool,
    out: TensorTuple,
) -> Result<TensorTuple>;

/// Find the maximum values of each slice in the given dimensions.
fn amax(
    input: &SharedPtr<CrossTensor>,
    dim: Vec<i64>,
    keepdim: bool,
    out: TensorOut,
) -> Result<SharedPtr<CrossTensor>>;

/// Find the maximum values of each slice in the given dimensions.
fn amin(
    input: &SharedPtr<CrossTensor>,
    dim: Vec<i64>,
    keepdim: bool,
    out: TensorOut,
) -> Result<SharedPtr<CrossTensor>>;

/// Find the minimum and maximum values in the given dimension.
fn aminmax(
    input: &SharedPtr<CrossTensor>,
    dim: OptionalInt,
    keepdim: bool,
    out: TensorTuple,
) -> Result<TensorTuple>;

/// Compute the p-norm between two tensors.
fn dist(
    input: &SharedPtr<CrossTensor>,
    other: &SharedPtr<CrossTensor>,
    p: Scalar
) -> Result<SharedPtr<CrossTensor>>;
