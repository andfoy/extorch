
/// Get the size of a tensor
fn size(tensor: &SharedPtr<CrossTensor>) -> Result<&'static [i64]>;

/// Get the type of a tensor
fn dtype(tensor: &SharedPtr<CrossTensor>) -> Result<String>;

/// Get the device where the tensor lives on
fn device(tensor: &SharedPtr<CrossTensor>) -> Result<Device>;

/// Get the `requires_grad` status of a tensor
fn requires_grad(tensor: &SharedPtr<CrossTensor>) -> Result<bool>;

/// Get a string representation of a tensor
fn repr(tensor: &SharedPtr<CrossTensor>, opts: PrintOptions) -> Result<String>;

/// Convert a tensor into a list
fn to_list(tensor: &SharedPtr<CrossTensor>) -> Result<ScalarList>;

/// Return the element contained in a tensor with a single element.
fn item(tensor: &SharedPtr<CrossTensor>) -> Result<Scalar>;

/// Return the total number of elements of a tensor.
fn numel(tensor: &SharedPtr<CrossTensor>) -> Result<i64>;

/// Get the memory format of a tensor.
fn memory_format(tensor: &SharedPtr<CrossTensor>) -> Result<String>;

/// Get the layout of a tensor.
fn layout(tensor: &SharedPtr<CrossTensor>) -> Result<String>;

/// Determine if a tensor is complex.
fn is_complex(tensor: &SharedPtr<CrossTensor>) -> Result<bool>;

/// Determine if a tensor has a floating data type.
fn is_floating_point(tensor: &SharedPtr<CrossTensor>) -> Result<bool>;

/// Determine if a tensor has the conjugated part set to `true`.
fn is_conj(tensor: &SharedPtr<CrossTensor>) -> Result<bool>;

/// Determine if a tensor contains a single non-zero element.
fn is_nonzero(tensor: &SharedPtr<CrossTensor>) -> Result<bool>;
