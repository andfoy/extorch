
/// Shared interface to a tensor pointer in memory.
struct CrossTensorRef {
    tensor: SharedPtr<CrossTensor>,
}

/// Torch tensor device descriptor.
struct Device {
    device: String,
    index: i64,
}

/// DType enum.
// pub enum DType {
//     // Full name types
//     UInt8 = 0,
//     Int8 = 1,
//     Int16 = 2,
//     Int32 = 3,
//     Int64 = 4,
//     Float16 = 5,
//     Float32 = 6,
//     Float64 = 7,
//     BFloat16 = 8,
//     Complex32 = 9,
//     Complex64 = 10,
//     Complex128 = 11,
//     Bool = 12,
//     QUInt8 = 13,
//     QInt8 = 14,
//     QUInt2x4 = 15,
//     QUInt4x2 = 16,
//
//     // C-like type aliases
//     Byte = 0,
//     Char = 1,
//     Short = 2,
//     Int = 3,
//     Long = 4,
//     Half = 5,
//     Float = 6,
//     Double = 7,
//     CHalf = 9,
//     CFloat = 10,
//     CDouble = 11,
// }

/// Scalar number representation
struct Scalar {
    _ui8: u8,
    _i8: i8,
    _i16: i16,
    _i32: i32,
    _i64: i64,
    _f16: f32,
    _f32: f32,
    _f64: f64,
    _bool: bool,
    entry_used: String,
}

struct ScalarList {
    list: Vec<Scalar>,
    size: Vec<i64>
}
